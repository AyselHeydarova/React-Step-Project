{"ast":null,"code":"var _jsxFileName = \"/Users/aysel/WebstormProjects/React /my-first-react-project/src/Components/Timer/timer.js\";\nimport React, { Component } from 'react';\nimport TimerButton from \"./TimerButton\";\n\nclass Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      time: 0,\n      intervalID: null\n    };\n    this.time = React.createRef();\n\n    this.startHandler = e => {\n      let currentInterval = this.state.intervalID;\n      currentInterval = setInterval(() => {\n        let currentTime = this.state.time;\n        this.setState({\n          time: ++currentTime\n        });\n      }, 1000);\n      this.setState({\n        intervalID: currentInterval\n      });\n    };\n\n    this.stopHandler = e => {\n      let currentInterval = this.state.intervalID;\n      currentInterval = clearInterval(currentInterval);\n    };\n\n    this.resetHandler = e => {};\n  }\n\n  render() {\n    const time = this.state.time;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      ref: this.time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, time), React.createElement(TimerButton, {\n      name: \"Start\",\n      clickHandler: this.startHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(TimerButton, {\n      name: \"Stop\",\n      clickHandler: this.stopHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(TimerButton, {\n      name: \"Reset\",\n      clickHandler: this.resetHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/aysel/WebstormProjects/React /my-first-react-project/src/Components/Timer/timer.js"],"names":["React","Component","TimerButton","Timer","state","time","intervalID","createRef","startHandler","e","currentInterval","setInterval","currentTime","setState","stopHandler","clearInterval","resetHandler","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACJC,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,UAAU,EAAE;AAFR,KADkB;AAAA,SAM1BD,IAN0B,GAMnBL,KAAK,CAACO,SAAN,EANmB;;AAAA,SAQ1BC,YAR0B,GAQVC,CAAD,IAAO;AAClB,UAAIC,eAAe,GAAG,KAAKN,KAAL,CAAWE,UAAjC;AACAI,MAAAA,eAAe,GAAGC,WAAW,CAAE,MAAK;AAChC,YAAIC,WAAW,GAAG,KAAKR,KAAL,CAAWC,IAA7B;AACA,aAAKQ,QAAL,CAAc;AAACR,UAAAA,IAAI,EAAE,EAAEO;AAAT,SAAd;AACC,OAHwB,EAGvB,IAHuB,CAA7B;AAIA,WAAKC,QAAL,CAAc;AAACP,QAAAA,UAAU,EAAEI;AAAb,OAAd;AACH,KAfyB;;AAAA,SAiB1BI,WAjB0B,GAiBXL,CAAD,IAAO;AACjB,UAAIC,eAAe,GAAG,KAAKN,KAAL,CAAWE,UAAjC;AACAI,MAAAA,eAAe,GAAGK,aAAa,CAACL,eAAD,CAA/B;AAEH,KArByB;;AAAA,SAuB1BM,YAvB0B,GAuBVP,CAAD,IAAO,CAErB,CAzByB;AAAA;;AA0B1BQ,EAAAA,MAAM,GAAG;AACL,UAAMZ,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,GAAG,EAAE,KAAKA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBA,IAApB,CADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAG,OAApB;AAA4B,MAAA,YAAY,EAAI,KAAKG,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAG,MAApB;AAA2B,MAAA,YAAY,EAAI,KAAKM,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAG,OAApB;AAA4B,MAAA,YAAY,EAAI,KAAKE,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AApCyB;;AAuC9B,eAAeb,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport TimerButton from \"./TimerButton\";\n\nclass Timer extends Component {\n    state = {\n        time: 0,\n        intervalID: null\n    };\n\n    time = React.createRef();\n\n    startHandler = (e) => {\n        let currentInterval = this.state.intervalID;\n        currentInterval = setInterval( ()=> {\n            let currentTime = this.state.time;\n            this.setState({time: ++currentTime})\n            },1000);\n        this.setState({intervalID: currentInterval});\n    };\n\n    stopHandler = (e) => {\n        let currentInterval = this.state.intervalID;\n        currentInterval = clearInterval(currentInterval);\n\n    };\n\n    resetHandler = (e) => {\n\n    };\n    render() {\n        const time = this.state.time;\n        return (\n            <div>\n                <p ref={this.time}>{time}</p>\n                <TimerButton name = 'Start' clickHandler = {this.startHandler}/>\n                <TimerButton name = 'Stop' clickHandler = {this.stopHandler}/>\n                <TimerButton name = 'Reset' clickHandler = {this.resetHandler}/>\n            </div>\n        );\n    }\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}